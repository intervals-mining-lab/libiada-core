ALTER TABLE `node` ADD `use_trigger` INT UNSIGNED DEFAULT '0' NOT NULL ;


DROP TRIGGER IF EXISTS `vid_autocreate` ;
DELIMITER *
CREATE TRIGGER `vid_autocreate` BEFORE INSERT ON `node` 
FOR EACH ROW 
BEGIN 
IF NEW.use_trigger = 1 THEN 
BEGIN
SET NEW.vid = (SELECT IFNULL((SELECT vid FROM node ORDER BY vid DESC LIMIT 1),0)) + 1;
SET NEW.created = UNIX_TIMESTAMP();
SET NEW.changed = UNIX_TIMESTAMP();
END;
END IF;  
END *
DELIMITER ;


DROP TRIGGER IF EXISTS `node_revision_copy` ;
DELIMITER *
CREATE TRIGGER `node_revision_copy` AFTER INSERT ON `node` 
FOR EACH ROW 
BEGIN 
IF NEW.use_trigger = 1 THEN 
BEGIN
 INSERT INTO node_revisions (nid, vid, uid, title, timestamp, format) VALUES(NEW.nid, NEW.vid, NEW.uid, NEW.title, NEW.created, 1);
END;
END IF;  
END *
DELIMITER ;




DROP TRIGGER IF EXISTS `element_vid` ;
DELIMITER *
CREATE TRIGGER `element_vid` BEFORE INSERT ON `content_type_element`
FOR EACH ROW
BEGIN
IF NEW.vid = 0 THEN
BEGIN
SET NEW.vid=(SELECT vid FROM node WHERE nid = NEW.nid ORDER BY vid DESC LIMIT 1);
END;
END IF;
END *
DELIMITER ;


DROP TRIGGER IF EXISTS `md5_vid` ;
DELIMITER *
CREATE TRIGGER `md5_vid` BEFORE INSERT ON `content_field_hash_md5`
FOR EACH ROW
BEGIN
IF NEW.vid = 0 THEN
BEGIN
SET NEW.vid=(SELECT vid FROM node WHERE nid = NEW.nid ORDER BY vid DESC LIMIT 1);
END;
END IF;
END *
DELIMITER ;

DROP TRIGGER IF EXISTS `filetype_vid` ;
DELIMITER *
CREATE TRIGGER `filetype_vid` BEFORE INSERT ON `content_type_file_type`
FOR EACH ROW
BEGIN
IF NEW.vid = 0 THEN
BEGIN
SET NEW.vid=(SELECT vid FROM node WHERE nid = NEW.nid ORDER BY vid DESC LIMIT 1);
END;
END IF;
END *
DELIMITER ;

DROP TRIGGER IF EXISTS `file_vid` ;
DELIMITER *
CREATE TRIGGER `file_vid` BEFORE INSERT ON `content_type_file`
FOR EACH ROW
BEGIN
IF NEW.vid = 0 THEN
BEGIN
SET NEW.vid=(SELECT vid FROM node WHERE nid = NEW.nid ORDER BY vid DESC LIMIT 1);
END;
END IF;
END *
DELIMITER ;